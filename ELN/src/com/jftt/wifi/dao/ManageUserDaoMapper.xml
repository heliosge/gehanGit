<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jftt.wifi.dao.ManageUserDaoMapper">


	<!-- 弃用 begin-->
	
	<resultMap id="ManageUserBean" type="com.jftt.wifi.bean.ManageUserBean">
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="departmentId" column="department_id"/>
		<result property="position" column="position"/>
		<result property="workStatus" column="work_status"/>
		<result property="gender" column="gender"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="status" column="status"/>
		<result property="deleteFlag" column="delete_flag"/>
		<result property="address" column="address"/>
		<result property="memo" column="memo"/>
		<result property="workPhone" column="work_phone"/>
		<result property="internal" column="internal"/>
		<association property="roleIdList" column="id" select="getRoleByUserId" />
	</resultMap>
	
	
	<sql id="manageUserMap">
		<trim prefix="where" prefixOverrides="AND">
			<if test="name != null and name != '' ">
				AND name like CONCAT('%', #{name}, '%')
			</if>
			<if test="userId != null and userId != '' ">
				AND user_id = #{userId}
			</if>
			<if test="userIdLike != null and userIdLike != '' ">
				AND user_id like CONCAT('%', #{userIdLike}, '%')
			</if>
			<if test="departmentId != null">
				AND department_id = #{departmentId, jdbcType=NUMERIC}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="internal != null">
				AND internal = #{internal}
			</if>
			<if test="roleId != null">
				<if test="roleNot == null">
					AND id in (select user_id from nh_manage_user_role where role_id = #{roleId, jdbcType=NUMERIC})
				</if>
				<if test="roleNot != null">
					AND id not in (select user_id from nh_manage_user_role where role_id = #{roleId, jdbcType=NUMERIC} OR role_id is null)
				</if>
			</if>
			<if test="deleteFlag != null">
				AND delete_flag = #{deleteFlag, jdbcType=NUMERIC}
			</if>
		</trim>
	</sql>
	
	<sql id="manageUser_protery">
		id,
		user_id,
		password,
		name,
		department_id,
		position,
		work_status,
		gender,
		phone,
		email,
		status,
		delete_flag,
		address,
		memo,
		work_phone,
		internal
	</sql>
	
	<!-- 根据条件获得用户的数量 -->
	<select id="getManageUserCountByMap" resultType="int" parameterType="java.util.HashMap">
		select count(0) from nh_manage_user <include refid="manageUserMap"/>
	</select>
	
	<!-- 根据条件获得用户 -->
	<select id="getManageUserByMap" resultMap="ManageUserBean" parameterType="java.util.HashMap">
		select 
			<include refid="manageUser_protery"/>
		from 
			nh_manage_user
			<include refid="manageUserMap"/>
			order by update_time desc
			<if test="fromNum != null">
				limit ${fromNum}, ${pageSize}
			</if>
	</select>
	
	<!-- 升级用户 -->
	<update id="updateManageUserById" parameterType="java.util.HashMap">
		update nh_manage_user set 
			<trim>
				<if test="deleteFlag != null and deleteFlag != '' ">
					delete_flag = #{deleteFlag},
				</if>
				<if test="userId != null and userId != '' ">
					user_id = #{userId},
				</if>
				<if test="password != null and password != '' ">
					password = #{password},
				</if>
				<if test="name != null and name != '' ">
					name = #{name},
				</if>
				<if test="departmentId != null and departmentId != '' ">
					department_id = #{departmentId},
				</if>
				<if test="position != null and position != '' ">
					position = #{position},
				</if>
				<if test="workStatus != null and workStatus != '' ">
					work_status = #{workStatus},
				</if>
				<if test="gender != null and gender != '' ">
					gender = #{gender},
				</if>
				<if test="phone != null and phone != '' ">
					phone = #{phone},
				</if>
				<if test="email != null and email != '' ">
					email = #{email},
				</if>
				<if test="status != null and status != '' ">
					status = #{status},
				</if>
				<if test="address != null and address != '' ">
					address = #{address},
				</if>
				<if test="memo != null and memo != '' ">
					memo = #{memo},
				</if>
				<if test="workPhone != null and workPhone != '' ">
					work_phone = #{workPhone},
				</if>
				<if test="internal != null and internal != '' ">
					internal = #{internal},
				</if>
			</trim>
			update_time = (select now())
		where id = #{id}
	</update>
	
	<!-- 新增用户 -->
	<insert id="addManageUser" parameterType="com.jftt.wifi.bean.ManageUserBean"  useGeneratedKeys="true" keyProperty="id">
		insert into nh_manage_user 
			(user_id, password, name, department_id, position, work_status, gender, phone, email, status, address, memo, work_phone, update_time, internal)
		values 
			(#{userId}, #{password}, #{name}, #{departmentId}, #{position}, #{workStatus}, #{gender}, #{phone}, #{email}, #{status}, #{address}, #{memo}, #{workPhone}, (select now()), #{internal})
	</insert>
	
	<!-- 根据条件获得用户 -->
	<select id="getManageUserById" resultMap="ManageUserBean" parameterType="long">
		select 
			<include refid="manageUser_protery"/>
		from 
			nh_manage_user
		where
			id = #{id, jdbcType=NUMERIC}
	</select>
	
	<!-- find user by userid(account) -->
	<select id="getUserByUserId" resultMap="ManageUserBean" parameterType="java.util.HashMap">
		select 
			<include refid="manageUser_protery"/>
		from 
			nh_manage_user
		where
			user_id = #{user_id}
			<if test="workStatus != null and workStatus != '' ">
				AND work_status = #{workStatus}
			</if>
			<if test="status != null and status != '' ">
				AND status = #{status}
			</if>
			<if test="deleteFlag != null and deleteFlag != '' ">
				AND delete_flag = #{deleteFlag}
			</if>
	</select>
	
	
	<!-- 弃用  end-->
	
	<resultMap id="ManageUserIdSeqBean" type="com.jftt.wifi.bean.ManageUserIdSeqBean">
		<id property="id" column="id"/>
		<result property="createTime" column="create_time"/>
	</resultMap>
	
	<!--  -->
	<insert id="getManageUserIdSeq" useGeneratedKeys="true" parameterType="com.jftt.wifi.bean.ManageUserIdSeqBean" keyProperty="id">
		insert into manage_user_id_seq (create_time) values(now())
	</insert>
	
	<!-- 获取用户的权限id -->
	<select id="getRoleIdByUserId" parameterType="String" resultType="int">
		select role_id from manage_user_role where user_id = #{userId}
	</select>
	
	<resultMap id="ManageRoleBean" type="com.jftt.wifi.bean.ManageRoleBean">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="deleteFlag" column="delete_flag"/>
		<result property="companyId" column="company_id"/>
		<result property="subCompanyId" column="sub_company_id"/>
	</resultMap>
	
	<select id="getRoleByUserId" parameterType="String" resultMap="ManageRoleBean">
		select * from manage_role where id in (select role_id from manage_user_role where user_id = #{userId})
	</select>
	
	<!-- 增加用户角色 -->
	<insert id="addUserRole" parameterType="com.jftt.wifi.bean.ManageUserRoleBean" useGeneratedKeys="true" keyProperty="id">
		insert into manage_user_role
			(user_id, role_id)
		values 
			(#{userId}, #{roleId})
	</insert>
	
	<!-- 删除某个用户的所有角色 -->
	<delete id="deleteUserRoleByUserId" >
		delete from manage_user_role where user_id = ${userId}
	</delete>
	
	<!-- 删除某个用户的某个角色 -->
	<delete id="deleteUserRole" >
		delete from manage_user_role where user_id = ${userId} and role_id = ${roleId}
	</delete>
	
	<!-- 删除某角色的所有用户 -->
	<delete id="deleteUserRoleByRole" >
		delete from manage_user_role where role_id = ${roleId}
	</delete>
	
	<!-- 修改公司权限，删除该公司子用户缺少的权限 -->
	<delete id="deleteSubManagePageByUserId">
		delete from manage_role_page where id in (
		select a.id from (select id from manage_role_page
		where role_id != #{roleId} and role_id in (select id from manage_role where company_id in (select company_id from manage_role where id = #{roleId}))
		and page_id not in (select page_id from manage_role_page where role_id=#{roleId})) a )
	</delete>
	
	<select id="findUserIdByRoleName" resultType="String">
		select user_id id from manage_user_role 
		where role_id in (select id from manage_role where name like '%${roleName}%' and company_id = ${companyId})
	</select>
	
	<select id="checkStudentStudyRecord" resultType="int">
		select count(1) from(
			SELECT user_id FROM train_arrange_user where user_id = #{id}
			UNION ALL
			SELECT user_id FROM course_study_record where user_id = #{id}
			UNION ALL
			SELECT user_id FROM exam_assign_info where user_id = #{id}
			UNION ALL
			SELECT user_id FROM learn_plan_assignment where user_id = #{id}
			)a
	</select>
	
</mapper>
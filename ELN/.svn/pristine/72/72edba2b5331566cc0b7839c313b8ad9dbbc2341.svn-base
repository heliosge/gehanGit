<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jftt.wifi.dao.ResCoursewareDaoMapper" >
  <resultMap id="BaseResultMap" type="com.jftt.wifi.bean.ResCoursewareBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="descr" property="descr" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="sub_company_id" property="subCompanyId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
    <result column="duration_string" property="durationString" jdbcType="INTEGER"/>
    <result column="is_in_course" property="isInCourse" jdbcType="INTEGER"/>
    <result column="duration" property="duration"/>
  </resultMap>
  
    <sql id="coursewareWhere">
    	 <if test="companyId != null and companyId != ''">
                AND company_id = #{companyId} 
            </if>
            <if test="subCompanyId != null and subCompanyId != '' ">
            	  AND sub_company_id = #{subCompanyId} 
            </if>
		<if test="id != null and id != '' ">
			AND id = #{id}
		</if>
		<if test="name != null and name != '' ">
			AND name like CONCAT('%', #{name}, '%')
		</if>
		<if test="type != null and type != '' ">
			AND type = #{type}
		</if>
		 <if test="ids != null and ids != ''">
            	and id in(
            		<foreach collection="ids" item="item" index="index" separator=",">
							#{item}
					</foreach>
            	)
          </if>
	</sql>
  
  <select id="select" resultMap="BaseResultMap" parameterType="HashMap" >
    select  id, name, tags, file_name, file_path, descr, company_id, create_time, create_user_id, type, sub_company_id, create_user_name, duration_string
    ,(select count(1) from res_section_courseware where courseware_id = a.id) is_in_course
    from res_courseware a
    where delete_flag = 1
    <include refid="coursewareWhere"/>
    ORDER BY id DESC
    <if test="pageSize != '' and pageSize != null">
    	limit ${fromNum}, ${pageSize}
    </if>
  </select>
  
 <select id="selectSectionAndCourseware" resultMap="BaseResultMap">
 select  a.id, name, tags, file_name, file_path, descr, company_id, create_time, create_user_id, type, sub_company_id, create_user_name
    from res_courseware a
    left join res_section_courseware b on a.id = b.courseware_id
    where a.delete_flag = 1 and b.section_id=#{sectionId}
    <if test="type != null and type != ''">and a.type = #{type}</if>
    <if test="coursewareName != null and coursewareName != ''">and a.name '%${coursewareName}%'</if>
    order by b.id
 </select>
  
   <select id="selectCount" resultType="int" parameterType="HashMap" >
    select  count(1) from res_courseware where delete_flag = 1
    <include refid="coursewareWhere"/>
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer" >
    update res_courseware set delete_flag = 2
    where id = #{id}
  </delete>
  
  
  <insert id="insert" parameterType="com.jftt.wifi.bean.ResCoursewareBean" useGeneratedKeys="true" keyProperty="id">
    insert into res_courseware (name, tags, duration,duration_string,
      file_name, file_path, file_size, descr, 
      company_id, sub_company_id, create_user_id, type, create_user_name
      )
    values (#{name}, #{tags}, #{duration},#{durationString},
      #{fileName}, #{filePath}, #{fileSize}, #{descr}, 
      #{companyId}, #{subCompanyId}, #{createUserId}, #{type}, #{createUserName}
      )
  </insert>
  
	<!-- chenrui start  -->
	
		<!-- 根据章节id获取课件list -->
		<select id="getBySectionId" resultMap="BaseResultMap">
			select rc.* from res_section_courseware rsc
			left join res_courseware rc on(rsc.courseware_id=rc.id)
			where rsc.section_id=#{sectionId} and rc.delete_flag != 2
		</select>
		
	<!-- 章节关系表新增 -->
	<select id="inserRelate">
	
		insert into res_section_courseware(section_id,courseware_id) values(#{sectionId},#{coursewareId})
		
	</select>
	<!-- chenrui end  -->
  <update id="update" parameterType="com.jftt.wifi.bean.ResCoursewareBean" >
    update res_courseware
    set name = #{name},
      tags = #{tags},
      duration_string = #{durationString},
      duration = #{duration},
      descr = #{descr}
    where id = #{id}
  </update>
  
  <!-- shenhaijun start -->
  
  <!-- 根据id查询课件bean -->
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT rc.id,rc.name,rc.tags,rc.file_name,rc.file_path,rc.descr,rc.create_time,rc.duration,
        rc.create_user_id,rc.company_id,rc.sub_company_id,rc.type,rc.delete_flag 
      FROM res_courseware rc 
      WHERE rc.id = #{id} 
  </select>
  
  <!-- 根据课程id查询所有课件时长 -->
  <select id="getDurationByCourseId" resultType="java.lang.Integer">
  	SELECT rcw.duration 
  	FROM res_courseware rcw LEFT JOIN res_section_courseware rsc ON rcw.id = rsc.courseware_id 
  	  LEFT JOIN res_section rs ON rsc.section_id = rs.id 
  	WHERE rs.course_id = #{courseId} AND rcw.delete_flag = 1 
  </select>
  
  <!-- shenhaijun end -->
  
</mapper>